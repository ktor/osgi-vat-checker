buildscript {
    dependencies {
        classpath "gradle.plugin.com.liferay:gradle-plugins-wsdl-builder:2.0.3"
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:4.2.0'
        classpath 'biz.aQute.bnd:biz.aQute.bndlib:4.0.0'
    }

}
plugins {
    id 'io.spring.dependency-management' version '1.0.1.RELEASE'
}
apply plugin: 'java'
apply plugin: 'biz.aQute.bnd.builder'
apply plugin: "com.liferay.wsdl.builder"
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = "${jar.baseName}"
            version = "${jar.version}"

            pom {
                name = 'OSGi VIES VAT checker service implementation'
                description = 'The library provides implementation of VIES VAT checker web service client modelled in vat-checker-api bundle.'
                url = 'https://github.com/synus-org/osgi-vat-checker'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ktor'
                        name = 'Pawel Kruszewski'
                        email = 'pawel@synus.org'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/synus-org/osgi-vat-checker.git'
                    developerConnection = 'scm:git:ssh://github.com/synus-org/osgi-vat-checker.git'
                    url = 'https://github.com/synus-org/osgi-vat-checker'
                }
            }

            from components.java
        }
    }
}
compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

tasks.check.dependsOn jacocoTestReport
tasks.compileJava.dependsOn {
    buildWSDL
}

buildWSDL {
    buildLibs = false
    destinationDir = new File("${project.buildDir}/generated/sources")
}

sourceSets {
    main.java.srcDir new File(buildDir, "generated/sources")
}

dependencyManagement {
    imports {
        mavenBom 'org.apache.logging.log4j:log4j-bom:2.11.2'
    }
}
dependencies {
    compileOnly project(":vat-checker-api")
    compileOnly "org.osgi:org.osgi.service.component.annotations:1.4.0"
    compileOnly "org.apache.axis:axis-jaxrpc:1.4"
    compileOnly "org.apache.axis:axis:1.4"
    compileOnly 'org.slf4j:slf4j-api:1.7.25'

    testCompileOnly(
            project(":vat-checker-api"),
            "org.apache.axis:axis-jaxrpc:1.4",
            "org.apache.axis:axis:1.4",
            'org.slf4j:slf4j-api:1.7.25',
    )

    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.3.1',
    )
    testRuntimeOnly(
            'org.osgi:org.osgi.core:6.0.0',
            'axis:axis-wsdl4j:1.5.1',
            "commons-discovery:commons-discovery:0.5",
            "org.apache.axis:axis:1.4",
            "org.junit.jupiter:junit-jupiter-engine:5.3.1",
            "org.junit.vintage:junit-vintage-engine:5.2.0",
            'org.apache.logging.log4j:log4j-api',
            'org.apache.logging.log4j:log4j-core',
            'org.apache.logging.log4j:log4j-to-slf4j',
            'org.slf4j:jcl-over-slf4j:1.7.25',
            project(":vat-checker-api"),
            "org.apache.axis:axis-jaxrpc:1.4",
            'org.slf4j:slf4j-simple:1.7.25',
    )
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


